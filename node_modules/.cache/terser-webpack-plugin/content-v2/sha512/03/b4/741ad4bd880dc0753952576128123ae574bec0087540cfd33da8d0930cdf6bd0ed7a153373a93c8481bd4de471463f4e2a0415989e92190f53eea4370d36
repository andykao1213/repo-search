{"map":"{\"version\":3,\"sources\":[\"/Users/chuan/WorkSpace/repo-search/src/App.js\",\"/Users/chuan/WorkSpace/repo-search/src/serviceWorker.js\",\"/Users/chuan/WorkSpace/repo-search/src/index.js\"],\"names\":[\"SimpleTabs\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"searching\",\"total_count\",\"repoStore\",\"repos\",\"loading\",\"searchKeyWord\",\"page\",\"end\",\"lastChange\",\"Date\",\"handleScroll\",\"event\",\"distToBottom\",\"Math\",\"max\",\"document\",\"body\",\"offsetHeight\",\"window\",\"pageYOffset\",\"innerHeight\",\"length\",\"newRepoStore\",\"newRepo\",\"slice\",\"splice\",\"setState\",\"concat\",\"toConsumableArray\",\"fetchData\",\"handleKeyPress\",\"key\",\"target\",\"value\",\"trim\",\"handleChange\",\"clearTimeout\",\"timing\",\"setTimeout\",\"str\",\"bind\",\"assertThisInitialized\",\"addEventListener\",\"isAdding\",\"_this2\",\"fetch\",\"headers\",\"Content-Type\",\"method\",\"then\",\"resp\",\"ok\",\"json\",\"Error\",\"statusText\",\"data\",\"items\",\"catch\",\"err\",\"console\",\"error\",\"classes\",\"react_default\",\"a\",\"createElement\",\"className\",\"root\",\"container\",\"Typography_default\",\"component\",\"variant\",\"gutterBottom\",\"TextField_default\",\"id\",\"style\",\"margin\",\"placeholder\",\"fullWidth\",\"InputLabelProps\",\"shrink\",\"onKeyPress\",\"onChange\",\"List_default\",\"ListItem_default\",\"catalog\",\"_\",\"map\",\"repo\",\"index\",\"Divider_default\",\"ListItemText_default\",\"repoName\",\"primary\",\"Link_default\",\"href\",\"html_url\",\"link\",\"full_name\",\"secondary\",\"language\",\"description\",\"repoDes\",\"ListItemIcon_default\",\"repoLang\",\"Star_default\",\"stargazers_count\",\"progress\",\"CircularProgress_default\",\"React\",\"Component\",\"withStyles\",\"theme\",\"backgroundColor\",\"palette\",\"background\",\"paper\",\"position\",\"marginTop\",\"width\",\"left\",\"transform\",\"display\",\"justifyContent\",\"Boolean\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"App\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { withStyles } from '@material-ui/core/styles';\\nimport TextField from '@material-ui/core/TextField';\\nimport Typography from '@material-ui/core/Typography';\\nimport List from '@material-ui/core/List';\\nimport ListItem from '@material-ui/core/ListItem';\\nimport ListItemText from '@material-ui/core/ListItemText';\\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\\nimport StarIcon from '@material-ui/icons/Star';\\nimport Divider from '@material-ui/core/Divider';\\nimport _ from 'lodash';\\nimport Link from '@material-ui/core/Link';\\nimport CircularProgress from '@material-ui/core/CircularProgress';\\n\\nconst styles = theme => ({\\n  root: {\\n    backgroundColor: theme.palette.background.paper,\\n    position: 'relative',\\n  },\\n  container: {\\n    position: 'relative',\\n    marginTop: '50px',\\n    width: '60%',\\n    left: '50%',\\n    transform: 'translateX(-50%)',\\n  },\\n  catalog: {\\n    display:'flex',\\n    justifyContent: 'space-between',\\n  },\\n  progress: {\\n    display: 'flex',\\n    justifyContent: 'center',\\n  },\\n  repoName: {\\n    width: '35%'\\n  },\\n  repoDes: {\\n    width: '55%'\\n  },\\n  repoLang: {\\n    width: '10%'\\n  }\\n});\\n\\nclass SimpleTabs extends React.Component {\\n\\n  constructor(props){\\n    super(props);\\n    // this timer is for detecting the time space between two api request.\\n    var timing = setTimeout(()=>{},0);\\n  }\\n\\n  componentDidMount() {\\n    // add event listner to scrolling\\n    window.addEventListener('scroll', this.handleScroll);\\n  }\\n\\n  state = {\\n    searching: false,   // determine showing 'repostitory results' or not\\n    total_count: 0, \\n    repoStore:[],       // store the repo data that isn't render yet\\n    repos: [],          // store the data that is rendered\\n    loading: false,     // determine if the progress icon should show\\n    searchKeyWord: '',  // to determine the word last searched.\\n    page: 1,            // which page should be request  \\n    end: false,         // if the page scroll to the end\\n    lastChange: new Date(), // last time change the text field\\n  };\\n\\n  // this function send the request to GitHub\\n  fetchData(str, isAdding) {\\n    \\n    fetch(`https://api.github.com/search/repositories?q=${str}&page=${this.state.page}&per_page=100`, {\\n      headers: {\\n        \\\"Content-Type\\\": \\\"application/json\\\"\\n      },\\n      method: 'GET'\\n    })\\n    .then(resp => {\\n      if(resp.ok) return resp.json();\\n      else throw Error(resp.statusText);\\n    })\\n    .then(data => {\\n      //Process the response data\\n      let {total_count, items} = data;\\n      //if there is no repos from GitHub\\n      if(!items.length){\\n        this.setState({\\n          end: true,\\n        });\\n        return;\\n      }\\n    \\n      // Everytime, we store all the request data in repoStore, and we pop out 10 items to repos and render them.\\n      let repos = items.slice(0, 10);\\n      let repoStore = items;\\n      repoStore.splice(0, 10);\\n\\n      this.setState({\\n        total_count: total_count,\\n        repos: isAdding? [...this.state.repos, ...repos]:repos,\\n        searching: true,\\n        loading: false,\\n        searchKeyWord: str,\\n        repoStore: repoStore,\\n      });\\n    })\\n    .catch(err => {\\n      console.error(err);\\n    })\\n  }\\n\\n  \\n  handleScroll = event => {\\n    // check if the page is scroll to the end\\n    let distToBottom = Math.max(document.body.offsetHeight - (window.pageYOffset + window.innerHeight), 0);\\n    if (!this.state.loading && distToBottom <= 20 && !this.state.end) {\\n\\n      // if there is still data in repoStore, render them!\\n      if(this.state.repoStore.length){\\n        let newRepoStore = this.state.repoStore;\\n        let newRepo = this.state.repoStore.slice(0, 10);\\n        newRepoStore.splice(0, 10);\\n        this.setState({\\n          repoStore: newRepoStore,\\n          repos: [...this.state.repos, ...newRepo],\\n        });\\n      }\\n      else{\\n        // No data in repoStore, send request\\n        this.setState({\\n          loading: true,\\n          page: this.state.page + 1,\\n        });\\n\\n        this.fetchData(this.state.searchKeyWord, true);\\n      }\\n      \\n    }\\n  };\\n\\n  // if we press enter at the textfield, send request\\n  handleKeyPress = event => {\\n    if(event.key === 'Enter'){\\n      if(event.target.value.trim() && event.target.value !== this.state.searchKeyWord){\\n        this.fetchData(event.target.value, false);\\n        this.setState({\\n          loading: true,\\n        })\\n      }\\n    }\\n  };\\n\\n  // if textfield has been change, send request. In order to lessen the request, if user didn't type for 3sec, send request\\n  handleChange = event => {\\n    clearTimeout(this.timing);\\n    function foo(str) {\\n      if(str.trim() && str !== this.state.searchKeyWord){\\n        this.fetchData(str, false);\\n        this.setState({\\n          loading: true,\\n        })\\n      }\\n    }\\n    \\n    this.timing = setTimeout(foo.bind(this), 3000, event.target.value);\\n  }\\n\\n  render() {\\n    const { classes } = this.props;\\n\\n    return (\\n      <div className={classes.root}>\\n        <div className={classes.container}>\\n          <Typography \\n            component=\\\"h2\\\" \\n            variant=\\\"h1\\\" \\n            gutterBottom\\n          >\\n            GitHub Repo Finder\\n          </Typography>\\n          <TextField\\n            id=\\\"outlined-full-width\\\"\\n            style={{ margin: 8 }}\\n            placeholder=\\\"Search Repo\\\"\\n            fullWidth\\n            margin=\\\"normal\\\"\\n            variant=\\\"outlined\\\"\\n            InputLabelProps={{\\n              shrink: true,\\n            }}\\n            onKeyPress = {this.handleKeyPress}\\n            onChange = {this.handleChange}\\n          />\\n          <List className={classes.root}>\\n            { \\n              this.state.searching ? (\\n              <ListItem className={classes.catalog}>\\n                <Typography\\n                  variant=\\\"h6\\\" \\n                  gutterBottom\\n                >\\n                  {this.state.total_count} repository results\\n                </Typography>\\n              </ListItem>\\n              ) : ''\\n            }\\n            {\\n              _.map(this.state.repos, (repo, index) => \\n              <div key = {index}>\\n                <Divider component=\\\"li\\\" />\\n                <ListItem >\\n                  <ListItemText \\n                    className={classes.repoName}\\n                    primary={\\n                      <Link href={repo.html_url} className={classes.link}>\\n                        {repo.full_name}\\n                      </Link>\\n                    } \\n                    secondary={repo.language} \\n                  />\\n                  <ListItemText \\n                    secondary={repo.description} \\n                    className={classes.repoDes}\\n                  />\\n                  <ListItemIcon\\n                    className={classes.repoLang}\\n                  >\\n                    <StarIcon />\\n                    <ListItemText primary={repo.stargazers_count} />\\n                  </ListItemIcon>\\n                </ListItem>\\n              </div>\\n              )\\n            }\\n            {\\n              this.state.loading && !this.state.end ? (\\n              <div className={classes.progress}>\\n                <CircularProgress />\\n              </div>\\n              ) : ''\\n            }\\n            \\n            \\n          </List>\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\\nSimpleTabs.propTypes = {\\n  classes: PropTypes.object.isRequired,\\n};\\n\\nexport default withStyles(styles)(SimpleTabs);\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{103:function(e,t,a){e.exports=a(265)},108:function(e,t,a){},265:function(e,t,a){\"use strict\";a.r(t);var n=a(1),o=a.n(n),r=a(15),s=a.n(r),i=(a(108),a(28)),c=a(90),l=a(91),h=a(102),p=a(92),u=a(101),d=a(27),m=a(50),g=a(95),f=a.n(g),v=a(26),y=a.n(v),w=a(51),E=a.n(w),b=a(52),j=a.n(b),S=a(35),k=a.n(S),O=a(98),N=a.n(O),C=a(99),D=a.n(C),K=a(96),W=a.n(K),_=a(93),T=a.n(_),x=a(97),B=a.n(x),L=a(100),P=a.n(L),H=function(e){function t(e){var a;Object(c.a)(this,t),(a=Object(h.a)(this,Object(p.a)(t).call(this,e))).state={searching:!1,total_count:0,repoStore:[],repos:[],loading:!1,searchKeyWord:\"\",page:1,end:!1,lastChange:new Date},a.handleScroll=function(e){var t=Math.max(document.body.offsetHeight-(window.pageYOffset+window.innerHeight),0);if(!a.state.loading&&t<=20&&!a.state.end)if(a.state.repoStore.length){var n=a.state.repoStore,o=a.state.repoStore.slice(0,10);n.splice(0,10),a.setState({repoStore:n,repos:[].concat(Object(i.a)(a.state.repos),Object(i.a)(o))})}else a.setState({loading:!0,page:a.state.page+1}),a.fetchData(a.state.searchKeyWord,!0)},a.handleKeyPress=function(e){\"Enter\"===e.key&&e.target.value.trim()&&e.target.value!==a.state.searchKeyWord&&(a.fetchData(e.target.value,!1),a.setState({loading:!0}))},a.handleChange=function(e){clearTimeout(a.timing),a.timing=setTimeout(function(e){e.trim()&&e!==this.state.searchKeyWord&&(this.fetchData(e,!1),this.setState({loading:!0}))}.bind(Object(d.a)(Object(d.a)(a))),3e3,e.target.value)};setTimeout(function(){},0);return a}return Object(u.a)(t,e),Object(l.a)(t,[{key:\"componentDidMount\",value:function(){window.addEventListener(\"scroll\",this.handleScroll)}},{key:\"fetchData\",value:function(e,t){var a=this;fetch(\"https://api.github.com/search/repositories?q=\".concat(e,\"&page=\").concat(this.state.page,\"&per_page=100\"),{headers:{\"Content-Type\":\"application/json\"},method:\"GET\"}).then(function(e){if(e.ok)return e.json();throw Error(e.statusText)}).then(function(n){var o=n.total_count,r=n.items;if(r.length){var s=r.slice(0,10),c=r;c.splice(0,10),a.setState({total_count:o,repos:t?[].concat(Object(i.a)(a.state.repos),Object(i.a)(s)):s,searching:!0,loading:!1,searchKeyWord:e,repoStore:c})}else a.setState({end:!0})}).catch(function(e){console.error(e)})}},{key:\"render\",value:function(){var e=this.props.classes;return o.a.createElement(\"div\",{className:e.root},o.a.createElement(\"div\",{className:e.container},o.a.createElement(y.a,{component:\"h2\",variant:\"h1\",gutterBottom:!0},\"GitHub Repo Finder\"),o.a.createElement(f.a,{id:\"outlined-full-width\",style:{margin:8},placeholder:\"Search Repo\",fullWidth:!0,margin:\"normal\",variant:\"outlined\",InputLabelProps:{shrink:!0},onKeyPress:this.handleKeyPress,onChange:this.handleChange}),o.a.createElement(E.a,{className:e.root},this.state.searching?o.a.createElement(j.a,{className:e.catalog},o.a.createElement(y.a,{variant:\"h6\",gutterBottom:!0},this.state.total_count,\" repository results\")):\"\",T.a.map(this.state.repos,function(t,a){return o.a.createElement(\"div\",{key:a},o.a.createElement(W.a,{component:\"li\"}),o.a.createElement(j.a,null,o.a.createElement(k.a,{className:e.repoName,primary:o.a.createElement(B.a,{href:t.html_url,className:e.link},t.full_name),secondary:t.language}),o.a.createElement(k.a,{secondary:t.description,className:e.repoDes}),o.a.createElement(N.a,{className:e.repoLang},o.a.createElement(D.a,null),o.a.createElement(k.a,{primary:t.stargazers_count}))))}),this.state.loading&&!this.state.end?o.a.createElement(\"div\",{className:e.progress},o.a.createElement(P.a,null)):\"\")))}}]),t}(o.a.Component),G=Object(m.withStyles)(function(e){return{root:{backgroundColor:e.palette.background.paper,position:\"relative\"},container:{position:\"relative\",marginTop:\"50px\",width:\"60%\",left:\"50%\",transform:\"translateX(-50%)\"},catalog:{display:\"flex\",justifyContent:\"space-between\"},progress:{display:\"flex\",justifyContent:\"center\"},repoName:{width:\"35%\"},repoDes:{width:\"55%\"},repoLang:{width:\"10%\"}}})(H);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));s.a.render(o.a.createElement(G,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[103,2,1]]]);","extractedComments":[]}